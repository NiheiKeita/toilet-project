name: deploy to stg-xserver

on: ["pull_request"]
# on: 
#   push:
#     tags:
#       - 'stg.v.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Create .env file and firebase-messaging-sw.js
        run: |
          # .envファイルを作成
          cat > .env << EOF
          # Firebase Configuration
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
          NEXT_PUBLIC_FIREBASE_VAPID_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_VAPID_KEY }}
          EOF
          
          # publicディレクトリを作成
          mkdir -p public
          
          # firebase-messaging-sw.jsファイルを作成
          cat > public/firebase-messaging-sw.js << EOF
          // Firebase Cloud Messaging Service Worker
          importScripts('https://www.gstatic.com/firebasejs/9.0.0/firebase-app-compat.js');
          importScripts('https://www.gstatic.com/firebasejs/9.0.0/firebase-messaging-compat.js');
          
          // Firebase設定
          const firebaseConfig = {
            apiKey: "${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}"
          };
          
          // Firebase初期化
          firebase.initializeApp(firebaseConfig);
          
          // Messagingインスタンス取得
          const messaging = firebase.messaging();
          
          // バックグラウンドメッセージハンドラー
          messaging.onBackgroundMessage((payload) => {
            console.log('[firebase-messaging-sw.js] Received background message ', payload);
          
            const notificationTitle = payload.notification?.title || '新しいメッセージ';
            const notificationOptions = {
              body: payload.notification?.body || '',
              icon: '/favicon.ico',
              badge: '/favicon.ico',
              data: payload.data || {}
            };
          
            return self.registration.showNotification(notificationTitle, notificationOptions);
          });
          EOF

      - name: Install dependencies
        run: npm install

      - name: Build Vite
        run: npm run build

      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.STG_FTP_SERVER }}
          username: ${{ secrets.STG_FTP_USERNAME }}
          password: ${{ secrets.STG_FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: ./
          exclude: |
            **/node_modules/**
            .env
            tests/**
            storage/**
            *.log
            *.cache